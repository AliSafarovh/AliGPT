{\rtf1\ansi\ansicpg1254\deff0\nouicompat\deflang1055{\fonttbl{\f0\fnil\fcharset0 Courier New;}{\f1\fnil Cascadia Mono;}{\f2\fnil\fcharset0 Cascadia Mono;}{\f3\fnil\fcharset238 Courier New;}{\f4\fnil Courier New;}{\f5\fnil\fcharset238 Cascadia Mono;}}
{\colortbl ;\red0\green0\blue0;\red255\green255\blue255;\red0\green0\blue255;\red43\green145\blue175;\red128\green0\blue0;\red255\green0\blue0;\red0\green128\blue0;\red255\green192\blue0;\red192\green80\blue77;\red158\green124\blue124;\red155\green0\blue211;\red0\green77\blue187;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\f0\fs22\lang1033 Api-Bizim business, Data Kodlarimizi Ios ,Android ve s. kimi sistemlerde oxunaqli hala cevirir.Api bizim kodlarimizi ekrana json formatinda qaytarir.\par
.\par
3Esas Layer var.\par
DataAccess-Sql ile bagli kodlari ozunde saxlayir.\par
Business-Biznes kodlarini ozunde saxlayir.\par
UI-Ekrana cixis.\par
Uiemri biznese oturur.Eger biznes kodlarindan gecerse mehsul Data Accesse (Db)-a oturulecek.\b\fs28\par
\par
\par
                     MyProject\par
\b0\fs22 1.Solution yarat\par
2.Class Library (.Net)yarat. DataAccess\par
3.Class Library(.Net) -Business Layer\par
4.Class Library(.Net)-Entities\par
5.Console App(.NetCore)-Consol UI (Test ucun) Api evezi\par
6.Her Layer de Abstract ve Concrete folder yarat\par
Abstract referans tipleri saxlayir(interfeys, abstarct ve s.)\par
Conncrete ise referans alacaq class lari saxlayir.\par
7.Concretde Class larimizi yaradiriq.\par
8.Abstractda IEntity interfeys yaradib class lara implement veririk.\par
Ientity den miras alan klass lar Db da bir table rolunu oynayir\par
9.Dal(Data Access Layer ) /Abstract da class larin interfeysini yaradaq(Mes:IProductDal)\par
10.Business/Abstract-classin biznes kodlari ucun interfeysi yaradaq.(IProductService)\par
11.Business/Concrete-Servisin Is kodlarini yazaq.(ProductManager:IProductService)\par
Implement edek(IProductDal _productdal())\par
12.Core Umumi Layer yaradilir.Data Access(yeni Data Layerin Generic kodlari)\par
Core/DataAcces/EntityFramework/EntityRepositoryBase.cs ve IEntityRepository interfeys yaradilir. IEntityRepository miras verir Entity-deki interfeyse.EntityRepositoryBase.cs -deki kodlar sa EfProductdal-a kod oturur. ve business de Efproductdal cagiraraq EntityRepositoryBase.cdeki kodlari calistiririq.\par
Core layer de Entities folder icinde Ientity.cs yarat.Entities layerdeki class lari temsil edir\par

\pard\qc\b Sql ile elaqelendirme\b0\par

\pard 13.DataAcces Layer Db ile elaqelendirmek ucun MicrosoftEntityFrameworkCore.sqlserver paketi yukleyek. \par
14.DA-layer/EF-de context tipinde class yarat, sql ile tablolari elaqelendirmek ucun. bu class dbcontext den miras alacaq. NameContext.cs de override onconfiguring (tab)et. Db melumatlarini yaz.\par
Mes:\par
\cf1\highlight2\f1\fs19  \cf3 protected\cf1  \cf3 override\cf1  \cf3 void\cf1  OnConfiguring(\cf4 DbContextOptionsBuilder\cf1  optionsBuilder)\par
 \{\par
     optionsBuilder.UseSqlServer(\cf5 @"Server=DELL;Database=Nortwind;Trusted_Connection=True;TrustServerCertificate=True;"\cf1 );\par
 \}\f2\par
\f1  \cf3 public\cf1  \cf4 DbSet\cf1  <\cf4 Product\cf1 >Products \{ \cf3 get\cf1 ; \cf3 set\cf1 ; \}\cf0\highlight0\f0\fs22\par
Menim Product sinfimden db de Products adinda tablo yarat.\par
\par

\pard\qc\b DTO\par

\pard\b0 Entities layer de DTOs folder/ClassNameDetailDto.cs yarat.\par
IDTO dan implement al. IDTO ise Core/Entities/IDTO.cs interfeysidir.\par
sonra ClassNameDetailDto.cs  de lazimi prop cagir\par
                         \par
                         \b   RESULTS\par
\b0 Core Layer de Utilities(araclar )adli folder yarat. Bunun icinde ferqli araclar olacaq.\par
Mes:Results folder.\par
IResult interfeysi yaradaqki, bize bool Success ve string Messages field ler qaytarsin. bu metodlari isletmek ucun Result.cs yarat ki,interfeysden miras alsin ve bize bool deyerini ve mesaji qaytarsin.Sonra Business/Serviclerde Metod tipini IResult tipinde yap.\par
NOT:Business/Constant folder yarat/Messages.cs de sabit mesajlar yaz ve metodlarda bu mesajlari cagir\par
\par
                           \b WebAPI\par
\b0 Api bizim business ve DA-deki kodlarimizi diger ES-lerinde Restful(json) formatina cevirerek oxunaqli hala getirir.\par
Solution uzerinde yeni proyekt ve Api elave et.Burada Asp.net core secirik.(Asp.net bir APIdir).\tab\par
Restfull mimarilerini internet protokolllari istifade ederek gerceklesdiririk(http).\par
Class larin Controllerini yarat ve ControlerBase den miras al.\par
Controllerde Mes:IProdutService _productservice goturmek ucun bize IOC(Inversionof Control)lazmdir.\tab\par
\cf6 * IOC - \f3\u304?njectionlar\u305? idar\f4\u601? edir \cf0\f0\par
Bunuda Program.cs de bildiyimiz build emrini icra etmekle yerine yetririk.\par
\cf7\highlight2\f1\fs19 builder.Services.AddSingleton<IProductService,ProductManager>();\cf0\highlight0\f0\fs22\tab  \par
\cf6 NOt: \cf1 Bezi Apiler varki, orada Build kodlari (IOC)calismir(Mes;Classic Mvc). ona gore de biz umumi bir buildden istifade etmek ucun \cf6 Autofac \cf1  sistemden istifade edeceyik.\tab\par
1.Business uzerinde NugetPm/Autofac ve Autofac.Extras.DynamicProxy yukle.\par
WebApi - Autofac.Extensions.DependencyInjection (NuGet)\par
2.Business Layer/DependencyResolvers(bagimliliq cozumleyici(asliliq)) folder ve icinde de Autofac folder yarat.\par
3.AutofacBusinessModule.cs yarat ve Module-den miras al.(using autofac)\par
4.Override Load veririk.\par
5.icerinde IOC lari icra edrik.\par
\highlight2\f1\fs19 builder.RegisterType<\cf4 ProductManager\cf1 >().As<\cf4 IProductService\cf1 >().SingleInstance();\f2  \cf8 (\cf9 Senden IProductServis isterken Productmanager ver\cf8 )\f1\par
\cf1 builder.RegisterType<\cf4 EfProductDal\cf1 >().As<\cf4 IProductDal\cf1 >().SingleInstance();\f2 (\cf9 IProductdal isterken Efproductdal ver\cf1 )\par
\par
\par
           \b       AOP ve Validation\par
AOp-\b0 bizim metodlardan evvel ise dusecek Atributlardir.\par
\cf6 AOP - Bir metodun \'f6n\'fcnd\f1\u601?, bir metodun sonunda, bir metod\par
x\u601?ta ver\u601?nd\u601? i\f5\'bal\f1\u601?y\u601?n kodlar\f5\u305? AOP memarisi il\f1\u601? yaz\f5\u305?r\u305?q\f2 .\f5\par
\cf1\f2 Evvelce Atributlar metodu yoxlayir. eger dogrulama kodlari uygundursa o zaman metod calisir.\par
AOP-nin bir nece novu var.\par
Loglama-Metoddaki xetani cixarir\par
Transaction-\par
Authorization-Yetkilendirme\par
Cache-boyuk fayllari daha suretli elde etmek ucun olan yaddas\par
Performance-Metodda gecikme olarsa performans artdirir\par
Validation-Dogrulama yapir\highlight0\b\f0\fs22\par
1.Busi\b0 ness-de ValidationRules (dogrulama) folderi yarat.\par
2.FluentValidation folder. (paketin adina uygun,basqa paket olarsa ona uygun folder yarat)\par
3.Business uzerinde FluentValidation paket indir.\par
4.ClassNameValidator.cs yarat. AbstractValidator dan miras al. \par
(CTOR yaz icinde dogrulama kodlarimizi yaziriq)\par
5.Validation dan butun proyektlerimizde istifade etmek ucun umumi kod yaziriq. bunun ucun Core Layere kec.\par
6.Core de CrossCuttingConcerns folder yarat.\par
7.icinde istifade etdiyin atribut adinda(Mes Validation)folderi yarat.\par
8.ValidationTool.cs yarat.\par
9.Core/Utilities/Interception(Onleyiciler)folderi yarat.\par
icinde AspectInterceptor,MethodInterceptor,MethodInterceptorsBase class lari yarat.\par
\highlight2\f2 9.AutoFac hem IOc hemde Aop ucun lazm oldugu ucun,Core layer de hemin Autofac paketleri yukle.\par
10.Core/Aspects/AutoFac(istifade paketi)Validation(istifade atributu) folderleri yarat.\par
11.ValidationAspect.cs yarat.(burada Atributun hansi oldugu dogrulanir:Mes:heqiqeten Validation Atributudur).\par
\cf6 Isleme prinsipi: \cf0\f1\fs19 Cross Custing Concerns\par
            Validation, Log , CAche, Transaction, Authoritation ve s. \par
\cf10\f2 //ValidationAspect\cf0\f1\par
  Metod ise salinir.Atribut devreye girir.Evvelce atributun hansi tip oldugunu yoxlanilir.\f2 (ValidationAspectde)\f1\par
  Atribur ValidationAspect icinde yoxlanilirki bu IValidation daxilinde gelen Validation metodudurmu? eger deyilse Error.Message versin,\par
  eger Validator Atributudursa  _validatorType = validatorType etsin.\par
\cf1             \cf7 //  protected override void OnBefore(IInvocation invocation) Add metoduna gir \cf0 . (invocation-metod)\par
  1.Validatorun hansi tipe aidoldugunu tap:\par
\cf1             \cf7 // var validator = (IValidator)Activator.CreateInstance(_validatorType); // \cf0 ProductValidator\par
\cf1\par
 \cf0 2.tapilan ProductValidator neyi yoxlayacaq? (Add olunan Product product-i)\par
\cf1             \cf7 // var entityType = _validatorType.BaseType.GetGenericArguments()[0]; \cf0 // Product\cf1\par
            \cf7 // var entities = invocation.Arguments.Where(t => t.GetType() == entityType); \cf0 // product\par
\cf1\par
 \cf0 3.yoxlanilacaq mehsul askar olduqdan sonra Atributu ise salir.\cf1\par
            \cf7 //foreach (var entity in entities)   \cf0 (Product product)\par
\cf1             \cf7 // \{\cf1\par
            \cf7 //   ValidationTool.Validate(validator, entity); \cf1\par
            \cf7 //\}\cf1\par

\pard\qc\cf11\b\par
            2-ci merhele (ValidationTool)\par

\pard\cf1\b0             \cf7  public static void  Validate(IValidator validator,object entity) \cf0 ProductValidator   , entity - metodun product-i.\par
\cf1  \cf7  \cf0 (Hansi Validatorun hansi entity ni yoxlayacagini mueyyen edir)\par
\cf1             \cf7 var context = new ValidationContext<object>(entity); \par
\cf0 context - product (Validatordan kecmesi ucun xeyali product yaradir)\par
\cf1             \cf7 // var result = validator.Validate(context); \par
\cf0 ve hemin contexti validatorda yoxla\par
\cf1             \cf7 // if (!result.IsValid)//eger dogrulama serti odenmese\cf1\par
            \cf7 //\{\cf1\par
            \cf7 //     throw new ValidationException(result.Errors); \cf0 xeta mesajini gonder\par
\cf1             \cf11\b\par
\f2                  3cu Merhele(MethodInterception)\f1\par
\cf0\b0\par
            Eger Validation dan kecdise try ile continue et ve sonda finally mesaji yolla\par
\cf1         \cf7 //    var isSuccess = true;\cf1\par
        \cf7 //    OnBefore(invocation);   Metodu ise sal\cf1\par
        \cf7 //    try\cf1\par
        \cf7 //    \{\cf1\par
        \cf7 //        invocation.Proceed();    metod isledi\cf1\par
        \cf7 //    \}\cf1\par
        \cf7 //    catch (Exception e)\cf1\par
        \cf7 //    \{\cf1\par
        \cf7 //        isSuccess = false;\cf1\par
        \cf7 //        OnException(invocation, e);\cf1\par
        \cf7 //        throw;\cf1\par
        //    \}\par
        \cf7 //    finally\cf1\par
        \cf7 //    \{\cf1\par
        \cf7 //        if (isSuccess)\cf1\par
        \cf7 //        \{\cf1\par
        \cf7 //            OnSuccess(invocation);  succsees ver\cf1\par
        \cf7 //        \}\cf1\par
        \cf7 //    \}\cf1\par
        \cf7 //    OnAfter(invocation);\cf1\par
        \cf7 //\}\cf6\par
\cf1\highlight0\f0\fs22\par

\pard\qc\b Business Rules Run\par

\pard\b0 1.Core/Business folder yarat(Business kodlari ucun araclar).\par
2.BusinessRules.cs(Iskurallari) yarat\par
3.IResult Run() adli metod yarat.(\cf3\highlight2\f1\fs19 public\cf1  \cf3 static\cf1  \cf4 IResult\cf1  Run(\cf3 params\cf1  \cf4 IResult\cf1 [] logics\f2 )-\cf6 (params \cf1 verdikde metod daxilinde istediyimiz qeder metod yoxlaya bilerik.)IResult[] ise metodlari array halinda qebul edecek.\par
\f1   \cf3 foreach\cf1  (\cf3 var\cf1  logic \cf3 in\cf1  logics)\par
 \{\par
     \cf3 if\cf1  (!logic.Success)\par
     \{\par
         \cf3 return\cf1  logic; \cf7\f5\par
\cf1      \}\par
 \}\par
 \cf3 return\cf1  \cf3 null\cf1 ;\par
\f2 4.Metodu yoxlayir.Eger Business kuralindan kecmezse metodun xeberdarliq mesaji ise dusecek.\par
Eger kuraldan kecersen return null olsun..\highlight0\f0\fs22   \par
\par

\pard\qc\cf6\b\fs24 Login User(Security)\cf1\fs22\par

\pard\b0 1.\par

\pard\qc\cf12\b\fs28 Status Kodlari\par

\pard\fs22 200 Kodlar\f3\u305?: U\u287?urlu Sor\u287?ular\cf1\par
200 OK: \b0 Sor\u287?u u\u287?urla h\f4\u601?yata ke\f0\'e7irildi.\par
\b 201 Created\b0 : Sor\f3\u287?u u\u287?urla h\f4\u601?yata ke\f0\'e7irildi v\f4\u601? yeni resurs yarad\f3\u305?ld\u305?.\par
\b 202 Accepted\b0 : Sor\u287?u q\f4\u601?bul olundu, lakin h\u601?l\u601? emal edilm\u601?yib.\par
\b 204 No Content\b0 : Sor\f3\u287?u u\u287?urla h\f4\u601?yata ke\f0\'e7irildi, lakin geri qaytar\f3\u305?lacaq m\f4\u601?zmun yoxdur.\par
\par
\cf12\b 300 Kodlar\f3\u305?: Yenid\f4\u601?n Y\f0\'f6nl\f4\u601?ndirm\u601?l\u601?r\par
\cf1 301 Moved Permanently: \b0 Resurs daimi olaraq ba\f3\'baqa URL-\f4\u601? k\f0\'f6\'e7\'fcr\'fcld\'fc.\par
\b 302 Found: \b0 Resurs m\'fcv\f4\u601?qq\u601?ti olaraq ba\f3\'baqa URL-\f4\u601? k\f0\'f6\'e7\'fcr\'fcld\'fc.\par
\b 304 Not Modified: \b0 Ke\f3\'bad\f4\u601? saxlan\f3\u305?lan versiya istifad\f4\u601? edilm\u601?lidir, d\u601?yi\f3\'baiklik yoxdur.\par
\par
\cf12\b 400 Kodlar\u305?: M\f0\'fc\f3\'bat\f4\u601?ri S\u601?hvl\u601?ri\cf1\b0\par
\b 400 Bad Request: \b0 Sor\f3\u287?u sintaksisind\f4\u601? s\u601?hv var v\u601? server onu ba\f3\'baa d\f0\'fc\f3\'bam\f0\'fcr.\par
\b 401 Unauthorized: \b0 Sor\f3\u287?u \f0\'fc\'e7\'fcn autentifikasiya laz\f3\u305?md\u305?r.\par
\b 403 Forbidden: \b0 Sor\u287?u ba\'baa d\f0\'fc\f3\'ba\f0\'fcld\'fc, lakin server t\f4\u601?r\u601?find\u601?n icaz\u601? verilmir.\par
\b 404 Not Found: \b0 Sor\f3\u287?unun ist\f4\u601?diyi resurs tap\f3\u305?lmad\u305?.\par
\b 409 Conflict: \b0 Sor\u287?u il\f4\u601? ba\f3\u287?l\u305? konflikt yaran\u305?b, m\f4\u601?s\u601?l\u601?n, eyni resursun m\f0\'fcxt\f4\u601?lif versiyalar\f3\u305?.\par
\b 422 Unprocessable Entity: \b0 Sor\u287?u u\u287?urlu oldu, lakin server onu emal ed\f4\u601? bilmir, m\u601?s\u601?l\u601?n, veril\u601?nl\u601?r d\f0\'fczg\'fcn deyil.\par
\par
\cf12\b 500 Kodlar\f3\u305?: Server S\f4\u601?hvl\u601?ri\cf1\b0\par
\b 500 Internal Server Error: \b0 Serverd\u601? g\f0\'f6zl\f4\u601?nilm\u601?z bir s\u601?hv ba\f3\'ba verdi.\par
\b 502 Bad Gateway: \b0 Bir serverd\f4\u601?n al\f3\u305?nan u\u287?ursuz cavaba g\f0\'f6r\f4\u601?, qap\f3\u305? serveri cavab\u305? dig\f4\u601?r server\u601? \f0\'e7atd\f3\u305?ra bilmir.\par
\b 503 Service Unavailable: \b0 Server m\f0\'fcv\f4\u601?qq\u601?ti olaraq xidm\u601?t ed\u601? bilmir (m\u601?s\u601?l\u601?n, server \f0\'e7ox y\'fckl\f4\u601?nib).\par
\b 504 Gateway Timeout: \b0 Qap\f3\u305? serveri, ba\'baqa bir serverd\f4\u601?n cavab almaqda gecikir.\f0\par
\cf6\b\tab                  \par
\cf0\b0\par
\par
 \par
\b\fs28\par
\b0\fs22\par
\par
}
 